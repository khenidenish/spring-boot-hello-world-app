pipeline {
    agent {
      kubernetes {
          label 'my-jenkins-agent'
          defaultContainer 'jnlp'
      yaml """
        apiVersion: v1
        kind: Pod
        metadata:
          labels:
            app: my-jenkins-agent
        spec:
          containers:
          - name: jnlp
            image: denishsrijan/jenkinsdocker:latest
            args: ['$(JENKINS_SECRET)', '$(JENKINS_NAME)']
            env:
            - name: DOCKER_HOST
              value: tcp://localhost:2375
            - name: DOCKER_TLS_CERTDIR
              value: ''
          - name: dind
            image: docker:19-dind
            command: ['dockerd-entrypoint.sh']
            args: []
            securityContext:
              privileged: true
          """
    }

    environment {
        AWS_REGION = 'ap-southeast-1'
        ECR_REPOSITORY = '549942532493.dkr.ecr.ap-southeast-1.amazonaws.com/spring-boot-demo'
        DOCKER_IMAGE_TAG = "${env.BUILD_NUMBER}"
        K8S_NAMESPACE = 'dev'
        K8S_DEPLOYMENT_NAME = 'my-app'
    }

    stages {
        stage('Build') {
            steps {
                // Build the Docker image
                script {
                    //sh 'docker login https://549942532493.dkr.ecr.ap-southeast-1.amazonaws.com -u AKIAYACZBDGGQN3DNWLP -p 3P/JrQZQP7DQZhjPThN/V5MZXf7CJQ36n107crv5 '
                //       sh 'sleep 5000'
                      docker.withRegistry('https://549942532493.dkr.ecr.ap-southeast-1.amazonaws.com', 'ecr:ap-southeast-1:aws-credential') {
                        sh 'docker info'
                        def dockerImage = docker.build("${ECR_REPOSITORY}:${DOCKER_IMAGE_TAG}", "-f Dockerfile .")
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                // Deploy the Docker image to Kubernete
                sh ' kubectl '
                script {
                    withKubeConfig([credentialsId: 'kubeconfig-credential', serverUrl: 'https://7E0DFEB26D957EB7CA7980D91D2B11C2.gr7.ap-southeast-1.eks.amazonaws.com'])
                    {
                        sh '''
                            kubectl set image deployment/${K8S_DEPLOYMENT_NAME} ${K8S_DEPLOYMENT_NAME}=${ECR_REPOSITORY}:${DOCKER_IMAGE_TAG} -n ${K8S_NAMESPACE} --kubeconfig=$KUBECONFIG
                        '''
                    }
                }
            }
        }
    }
    
}

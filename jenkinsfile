pipeline {
    agent {
        kubernetes {
            label 'my-jenkins-agent'
            defaultContainer 'jnlp'
            yaml """
            apiVersion: v1
            kind: Pod
            spec:
              containers:
              - name: jnlp
                image: jenkins/jnlp-agent-docker
                tty: true
                volumeMounts:
                - name: dockersock
                  mountPath: /var/run/docker.sock
              - name: docker
                image: docker:dind
                securityContext:
                  privileged: true
                volumeMounts:
                - name: dockersock
                  mountPath: /var/run/docker.sock
              volumes:
              - name: dockersock
                hostPath:
                  path: /var/run/docker.sock
            """
        }
    }

    environment {
        AWS_REGION = 'ap-southeast-1'
        ECR_REPOSITORY = 'spring-boot-demo'
        DOCKER_IMAGE_TAG = "${env.BUILD_NUMBER}"
    }

    stages {
        stage('Build') {
            steps {
                // Build the Docker image
                script {
                    sh 'docker --version'
                    sh 'cat /etc/os-release' 
                    sh 'docker'
                    docker.withRegistry('https://549942532493.dkr.ecr.ap-southeast-1.amazonaws.com/', 'awscred') {
                        def dockerImage = docker.build("${ECR_REPOSITORY}:${DOCKER_IMAGE_TAG}", "-f Dockerfile .")
                        dockerImage.push()
                    }
                }
            }
        }
    }
}
